{
  "openapi": "3.0.1",
  "info": {
    "title": "TodoBackend API V1",
    "description": "An ASP.NET Core Web API for managing Task items",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:7209"
    }
  ],
  "paths": {
    "/api/v1/Task": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Returns a group of Tasks",
        "description": "",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Creates a Task.",
        "description": "Sample request:\r\n            \r\n    POST /task\r\n    {\r\n       \"name\": \"string\",\r\n       \"description\": \"string\",\r\n       \"createdTime\": \"2022-12-10T16:08:02.927Z\",\r\n       \"lastUpdatedTime\": \"2022-12-10T16:08:02.927Z\",\r\n       \"startedTime\": \"2022-12-10T16:08:02.927Z\",\r\n       \"dueTime\": \"2022-12-10T16:08:02.927Z\",\r\n       \"tags\": [\r\n           {\r\n           \"name\": \"string\",\r\n           \"description\": \"string\"\r\n           }\r\n       ],\r\n       \"stage\": \"Done\",\r\n       \"progress\": 0,\r\n       \"priority\": \"High\",\r\n       \"creator\": \"string\",\r\n       \"assignee\": \"string\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created item"
          },
          "400": {
            "description": "If the item is null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Task/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Returns a specific of Task matching the given Id.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The first name to search for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Update a specific of Task matching the given Id.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id to search for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The newly updated Task",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Deletes a specific Task.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Tag": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Task": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "startedTime": {
            "type": "string",
            "format": "date-time"
          },
          "dueTime": {
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true
          },
          "stage": {
            "$ref": "#/components/schemas/TaskStage"
          },
          "progress": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "priority": {
            "$ref": "#/components/schemas/TaskPriority"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "assignee": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskPriority": {
        "enum": [
          "High",
          "Medium",
          "Low"
        ],
        "type": "string"
      },
      "TaskStage": {
        "enum": [
          "Done",
          "InProgress",
          "Block",
          "Todo",
          "Test",
          "Backlog"
        ],
        "type": "string"
      }
    }
  }
}